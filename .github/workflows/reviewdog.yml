name: reviewdog
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  reviewdog-github-check:
    name: reviewdog (github-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - uses: actions/checkout@v2

      - name: Install linters
        run: '( mkdir linters && cd linters && go get golang.org/x/lint/golint )'

      - name: Setup reviewdog
        run: |
           mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $HOME/bin
           echo ::add-path::$HOME/bin
#          go install ./cmd/reviewdog
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          golint ./... | reviewdog -f=golint -name=golint-github-check -reporter=github-check -level=warning
  reviewdog-pr:
    if: github.event_name == 'pull_request'
    name: reviewdog on Pull Request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/master/examples.md#go---modules
      - name: Cache Go Modules
        id: cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download

      - name: Install linters
        run: '( mkdir linters && cd linters && go get golang.org/x/lint/golint )'

      - name: Setup reviewdog
        run: |
          mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $HOME/bin
          echo ::add-path::$HOME/bin
#          go install ./cmd/reviewdog
      - name: Run reviewdog (github-pr-check)
        continue-on-error: true
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -reporter=github-pr-check -runners=golint,govet -fail-on-error
      - name: Run reviewdog (github-pr-review with tee)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Remove Go Problem Matchers [1] as it reports duplicate results with
          # reviewdog.
          # [1]: https://github.com/actions/toolkit/blob/master/docs/commands.md#problem-matchers
          echo "::remove-matcher owner=go::"
          golint ./... | reviewdog -f=golint -name=golint-pr-review -reporter=github-pr-review -tee
      - name: Run reviewdog (github-pr-check with -filter-mode=file)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          golint | reviewdog -f=golint -name=golint-pr-check-filter-mode-file -reporter=github-pr-check -filter-mode=file -level=warning
      - name: gofmt -s with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gofmt -s -d . | \
            reviewdog -name="gofmt" -f=diff -f.diff.strip=0 -reporter=github-pr-review
  golangci-lint:
    if: github.event_name == 'pull_request'
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-golangci-lint@v1
        with:
          github_token: ${{ secrets.github_token }}
          golangci_lint_flags: "--enable-all --exclude-use-default=false -D wsl -D testpackage"
          level: "warning"
          reporter: github-pr-check

  staticcheck:
    if: github.event_name == 'pull_request'
    name: runner / staticcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-staticcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true
          # workdir: ./_testdata/

  misspell:
    name: runner / misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          locale: "US"
          reporter: github-check

  languagetool:
    name: runner / languagetool
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-languagetool@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: info
          patterns: |
            **/*.md
            !**/testdata/**
  shellcheck:
    if: github.event_name == 'pull_request'
    name: runner / shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review

  alex:
    name: runner / alex
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-alex@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: info
